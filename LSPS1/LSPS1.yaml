openapi: 3.0.3
info:
  description: |
    API documentation for channel opening request from a Lightning Network Service Provider (LSP). Base API.
    

    ### Extensions
    The api is split in to the base api and extensions.
    All supported extensions are listed in the general API info endpoint.
    Extensions can add additional endpoints or fields.

  version: "2"
  title: "LSP Spec 1"
tags:
- name: "API Info"
- name: "Channel Request"


paths:
  /lsp/channels:
    get:
      tags:
      - "API Info"
      summary: "Get general API information."
      description: |
        Get general information about this API and supported extensions.
        
      operationId: "channel-order-info"
      responses:
        "200":
          description: |
            ## Extensions
            
            ### user_balance
            Indicates if the LSP is willing to push satoshi to the receiver side.
            
            ### onchain_payments
            Indicates if the LSP is willing to receive payments onchain.
            
          content:
              application/json:
                schema:
                    $ref: "#/components/schemas/ApiInfoResponse"
                example:
                  version: 2
                  website: "http://example.com/contact"
                  extensions:
                    base_api:
                      version: 1
                      max_user_balance_satoshi: "0"
                      max_lsp_balance_satoshi: "100000000"
                      min_required_onchain_satoshi: null
                      max_channel_expiry_weeks: 24
  
    post:
      tags:
      - "Channel Request"
      summary: "Requests a new channel order from the LSP."
      description: |
        This endpoint accepts arguments for a channel with a specific size and duration and returns the order information.
        
      operationId: "new-channel-request"
      requestBody:
          description: "Information needed to create your new deposit invoice."
          required: true
          content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/OrderRequest'
      responses:
        "201":
          description: "Created"
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/OrderResponse"
        "400":
          description: "Validation error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
              
  /lsp/channels/{id}:
    get:
      tags:
      - Channel Request
      summary: "Get information about a channel order."
      description: "Get information about a channel order"
      operationId: "get-channel-order"

      parameters:
        - in: path
          name: id
          description: "Order id"
          required: true
          schema:
              type: string
      responses:
        "200":
          description: "Channel information"
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/OrderResponse"
        "404":
          description: "Not found"
          
  /lsp/channels/{id}/open:
    post:
      tags:
      - "Channel Request"
      summary: "Updates where the channel is going to be opened to."
      description: |
        Opens the paid channel to the provided node syncronously.
      operationId: "open-channel-request"
      parameters:
        - in: path
          name: id
          description: "Order id."
          required: true
          schema:
              type: string
      requestBody:
          description: "Information needed to open the channel."
          required: true
          content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/ChannelOpenParameters'
      responses:
        "201":
          description: "Success"
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ChannelOpenResponse"
        "400":
          description: "Validation error"
        "404":
          description: "Not found"
        "412":
          description: "Channel open failed"
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ChannelOpenResponse"


components:
    schemas:
      ApiInfoResponse:
        type: "object"
        properties:
          version:
            type: integer
            description: "Version of this api. See https://github.com/BitcoinAndLightningLayerSpecs/lsp"
            example: 1
          options:
            type: object
            additionalProperties:
              $ref: "#/components/schemas/ExtensionOptions"
          website:
            type: string
            description: "Website that provides devs a way to get in contact and/or TOS."
            example: "https://blocktank.to/contact"
      
      AbstractExtensionOptions: # All extensions derive from this schema.
        type: object
        properties:
          version:
            type: integer
            example: 1
            default: 1
            description: Version of this extension. Integer starting at 1 counting up.

      BaseApiOptionsV1: # Options for the base api.
        allOf:
          - $ref: "#/components/schemas/AbstractExtensionOptions" # Extends BaseExtension
          - type: object
            properties:
              version:
                type: integer
                example: 1
                default: 1
              max_user_balance_satoshi:
                type: string
                description: "Maximal number of satoshi that the LSP is willing to push to the user side."
                example: "100000000"
              max_lsp_balance_satoshi:
                type: string
                description: "Maximal number of satoshi that the LSP is willing to contribute to the lsp balance."
                example: "100000000"
              min_required_onchain_satoshi:
                type: string
                description: "Minimal number of satoshi required to allow onchain payments. Null for unsupported."
                example: "9999"
                nullable: true
              max_channel_expiry_weeks:
                type: integer
                description: "Maximal number of weeks a channel can be leased for."
                example: 24

      ExtensionOptions: # Schema of all allowed options.
        oneOf: # One of these types need to match
          - $ref: "#/components/schemas/BaseApiOptionsV1"
    
      OrderRequest:
        type: object
        required:
          - details
        properties:
          order:
            $ref: "#/components/schemas/OrderParameters"
          open:
            $ref: "#/components/schemas/ChannelOpenParameters"

      OrderParameters:
        type: "object"
        required:
          - remote_balance
          - channel_expiry_weeks
        properties:
          lsp_balance_satoshi:
            type: string
            description: "Inbound liquidity amount in satoshis. Funds are at the LSP side."
            example: "5000000"
            minimum: 0
          user_balance_satoshi:
            type: string
            description: "Outbound liquidity amount in satoshis. Funds are at the user side."
            default: 0
            example: "2000000"
            minimum: 0
          onchain_fee_rate:
            type: number
            description: "On-chain fee rate of the channel opening transaction in satoshis per vbyte."
            minimum: 1
          channel_expiry_weeks:
            type: integer
            description: "Channel expiration in weeks."
            minimum: 1
            example: 12
          coupon_code:
            type: string
            description: "Coupon code to get a discount on the purchase."
            default: ''
            nullable: true
            maxLength: 128
          refund_onchain_address:
            type: string
            description: "Onchain address that a refund is sent to in case the channel open failed."
            default: null
            nullable: true
            example: "bc1qvmsy0f3yyes6z9jvddk8xqwznndmdwapvrc0xrmhd3vqj5rhdrrq6hz49h"
            
      OrderResponse:
        allOf:
          - type: "object"
            properties:
              id:
                type: string
                description: "An lsp generated order id used to look-up the status of this request"
                example: bb4b5d0a-8334-49d8-9463-90a6d413af7c
              state:
                description: "The state of the order."
                type: "string"
                enum:
                  - AWAITING_PAYMENT
                  - OFFER_EXPIRED
                  - PENDING_CHANNEL_OPEN
                  - COMPLETED
                example: COMPLETED
          - $ref: "#/components/schemas/OrderParameters"
          - type: "object"
            properties:
              lsp_connection_strings:
                type: array
                description: "A list of connection strings of the LSP for the channel open."
                example:
                    - "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f@3.33.236.230:9735"
                    - "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f@gwdllz5g7vky2q4gr45zguvoajzf33czreca3a3exosftx72ekppkuqd.onion:9735"
                items:
                  type: string
              created_at:
                description: "Datetime when this order has been created."
                type: string
                example: "2012-04-23T18:25:43.511Z"
              expires_at:
                description: "Datetime when the order expires."
                type: string
                example: "2015-01-25T19:29:44.612Z"
              open:
                $ref: "#/components/schemas/ChannelOpen"
              payment:
                $ref: "#/components/schemas/PaymentInfo"
              channel:
                $ref: "#/components/schemas/ChannelInfo"
      
      PaymentInfo:
        type: object
        properties:
          state:
            description: "The state of the payment."
            type: "string"
            enum:
              - EXPECT_PAYMENT # Expect payment
              - HOLD # Lighting payment arrived, preimage not released.
              - PAID # Lightning payment arrived, preimage released OR onchain payment arrived.
              - REFUNDED # Refund sent
            example: EXPECT_PAYMENT
          fee_total_satoshi:
            description: "The total fee the lsp will charge to open this channel in satoshi."
            type: string
            example: "8888"
          order_total_satoshi:
            description: "fee_total plus the user_balance requested in satoshi."
            type: string
            example: "2008888"
          lightning_invoice:
            description: "A lightning bolt11 invoice to pay the fee for this channel open."
            type: "string"
            example: "lnbc252u1p3aht9ysp580g4633gd2x9lc5al0wd8wx0mpn97..."
          onchain_address:
            description: "An onchain bitcoin address to pay the fee for this channel open."
            type: "string"
            nullable: true
            example: 'bc1p5uvtaxzkjwvey2tfy49k5vtqfpjmrgm09cvs88ezyy8h2zv7jhas9tu4yr'
          onchain_payments:
            description: "A list of payments received to onchain_address."
            nullable: true
            type: "array"
            items:
              $ref: "#/components/schemas/OnchainPayment"
            
      OnchainPayment:
        type: object
        properties:
          outpoint:
            type: string
            description: "Outpoint in the form of [txid:vout](https://btcinformation.org/en/glossary/outpoint)."
            example: '0301e0480b374b32851a9462db29dc19fe830a7f7d7a88b81612b9d42099c0ae:1'
          satoshi:
            type: string
            description: "Transaction amount in satoshi"
            example: "1200"
          confirmed:
            type: boolean
            description: "If the LSP has accepted the payment as confirmed."
            example: false
          
      ChannelInfo:
        type: object
        nullable: true
        properties:
          state:
            type: string
            enum:
              - OPENED
              - CLOSED
          opened_at:
            description: "Datetime when the channel has been opened."
            type: string
            example: "2012-04-23T18:25:43.511Z"
          open_transaction:
            description: "The [txid](https://btcinformation.org/en/glossary/txid) of the channel funding tx once it is broadcast."
            type: "string"
            example: '0301e0480b374b32851a9462db29dc19fe830a7f7d7a88b81612b9d42099c0ae'
          scid:
            type: string
            description: "Short channel id of the channel. Only available after channel confirmed."
            example: '643904x1419x1'
            nullable: true
          expires_at:
            description: "Datetime when the channel can be closed. Only available after channel is opened."
            type: string
            example: "2012-04-23T18:25:43.511Z"
          closing_transaction:
            description: "The [txid](https://btcinformation.org/en/glossary/txid) of the channel closing tx once it is broadcast."
            type: "string"
            nullable: true
            example: '0301e0480b374b32851a9462db29dc19fe830a7f7d7a88b81612b9d42099c0ae'
          closed_at:
            description: "Datetime when the channel has been closed."
            type: string
            example: "2012-04-23T18:25:43.511Z"
          node_id:
            description: "The node id of the customer node."
            type: "string"
            example: "03d4e028a0d4a90868ec202ab684fb0085779defea9ca7553e06146557631eec20"
          lsp_node_id:
            description: "The node id of the lsp node."
            type: "string"
            example: "03864ef025fde8fb587d989186ce6a4a186895ee44a926bfc370e2c366597a3f8f"

      ChannelOpenParameters:
        type: "object"
        required:
          - announce
          - user_connection_string_or_pubkey
        properties:
          announce:
            type: boolean
            description: "If the channel should be announced to the network. Also known as private/public channels."
            example: true
          user_connection_string_or_pubkey:
            type: string
            description: "Node connection string or pubkey to open the channel to."
            example: "03d4e028a0d4a90868ec202ab684fb0085779defea9ca7553e06146557631eec20@3.33.236.230:9735"
      
      ChannelOpen:
        allOf:
          - $ref: "#/components/schemas/ChannelOpenParameters"
          - type: object
            properties:
              state:
                type: string
                enum:
                  - PRECONDITIONS_FAILED # Channel is not ready to be opened yet.
                  - PENDING # Channel is about to being opened.
                  - FAILED  # Open with to the given node failed.
                  - SUCCESS # Channel open success
                example: PENDING
              fail_reason:
                type: string
                description: "Reason the channel could not be opened."
                nullable: true
                example: null
                enum:
                  - CHANNEL_REJECTED_BY_DESTINATION # For example wumbo not enabled.
                  - PEERING_FAILED # Couldn't establish a peer connection
      ChannelOpenError:
        type: object
        properties:
          error:
            type: string
            description: "Reason the channel couldn't be opened."
            enum:
              - CHANNEL_REJECTED_BY_DESTINATION # For example wumbo not enabled.
              - PEERING_FAILED # Couldn't establish a peer connection
              - REJECTED_BY_LSP # LSP rejected node.
              - PAYMENT_REQUIRED
          message:
            type: string
            description: "Human readable message"
            example: "ok"

      ChannelOpenResponse:
        type: "object"
        properties:
          success:
            type: boolean
            description: "Indicates if the channel has been opened."
            example: true
          message:
            type: string

            example: "ok"
          fail_reason:
            type: string
            nullable: true
            description: "Reason the channel couldn't be opened."
            enum:
              - CHANNEL_REJECTED_BY_DESTINATION # For example wumbo not enabled.
              - PEERING_FAILED # Couldn't establish a peer connection
              - REJECTED_BY_LSP # LSP rejected node.
              - PAYMENT_REQUIRED
              - ALREADY_OPEN
            example: null
          lsp_connection_string:
            type: string
            nullable: true
            description: "Node connection string that tried to connect."

      BadRequestResponse:
        type: object
        properties:
          message:
            type: string
            description: "Human readable message that describe the error"
            example: "Property lsp_balance must be above or equal 1."
          code:
            type: string
            description: "Error code"
            example: "BAD_REQUEST"
            enum:
              - "BAD_REQUEST"       
          
          
          
          
            